###############################
Setup barman:
###############################

>>> root

#
# Note: need to comment "Banner /etc/issue.net" if it's set.
#

$ vi /etc/ssh/sshd_config

$ cat /etc/ssh/sshd_config | grep -i issue
++++++++++
#Banner /etc/issue.net
++++++++++

$ service sshd restart

$ mkdir -p /postgres/soft/barman
$ {
yum install -y rsync
yum localinstall -y /postgres/soft/barman/python2-argh-0.26.1-5.el7.noarch.rpm
yum localinstall -y /postgres/soft/barman/python2-argcomplete-1.7.0-4.el7.noarch.rpm
yum localinstall -y /postgres/soft/barman/python-barman-2.10-2.el7.noarch.rpm
yum localinstall -y /postgres/soft/barman/barman-2.10-2.el7.noarch.rpm
}

$ chown postgres:postgres -R /postgres/soft
$ barman --version
+++++
2.10
Barman by 2ndQuadrant (www.2ndQuadrant.com)
+++++

$ passwd barman
$ chown barman:barman /etc/barman.conf

$ lvcreate --size 20G --name barman pgvg
$ mkfs.ext4 /dev/mapper/pgvg-barman
$ mkdir -p /barman
$ mount /dev/mapper/pgvg-barman /barman/
$ df -h /barman/
++++++++++++++++++++++++++++++
Filesystem Size Used Avail Use% Mounted on
/dev/mapper/pgvg-barman 20G 45M 19G 1% /barman
++++++++++++++++++++++++++++++

$ df -hT | grep -i pg
++++++++++++++++++++++++++++++
/dev/mapper/pgvg-postgres ext4 50G 119M 47G 1% /postgres
/dev/mapper/pgvg-barman ext4 20G 45M 19G 1% /barman
++++++++++++++++++++++++++++++

$ mkdir -p /barman/pgTEST/incoming
$ chown -R barman:barman /barman/
$ chmod -R 775 /barman/
>>> barman

$ cat ~/.bash_profile
+++++
export PS1='\[\033[0;33m\]\u@\h\[\033[00m\] [\t] \w]\$ '
+++++

$ ssh-keygen
$ ssh-copy-id -i .ssh/id_rsa.pub postgres@127.0.0.1

>>> postgres

$ ssh-keygen
$ ssh-copy-id -i .ssh/id_rsa.pub barman@127.0.0.1

>>> barman

$ cp /etc/barman.conf ~/barman.conf_orig
$ cat /dev/null > /etc/barman.conf
$ view /etc/barman.conf
++++++++++
[barman]
barman_home = /var/lib/barman
barman_user = barman
log_file = /var/lib/barman/barman.log
compression = gzip
reuse_backup = link
minimum_redundancy = 1
archiver = on

[pgTEST]
description = "pgTEST server"
ssh_command = ssh postgres@127.0.0.1
conninfo = host=127.0.0.1 user=postgres port=5432
retention_policy_mode = auto
retention_policy = REDUNDANCY 7
wal_retention_policy = main
backup_options = exclusive_backup
incoming_wals_directory = "/barman/pgTEST/incoming"
backup_directory = "/barman/pgTEST"
++++++++++

$ ln -s /etc/barman.conf /var/lib/barman/barman.conf

$ barman show-server pgTEST | grep incoming_wals_directory
++++++++++
incoming_wals_directory: /barman/pgTEST/incoming
++++++++++

###############################
Setup target databases:
###############################

>>> postgres

$ vi $PGDATA/custom.conf
++++++++++
...
# Barman backups
archive_mode = on
archive_command = 'rsync -a %p barman@127.0.0.1:/barman/pgTEST/incoming/%f'
archive_timeout = 1h
wal_level = archive
++++++++++

$ cp $PGDATA/pg_hba.conf $PGDATA/pg_hba.conf_bkp_28042020
$ vi $PGDATA/pg_hba.conf
++++++++++
# TYPE DATABASE USER ADDRESS METHOD
# "local" is for Unix domain socket connections only
local all all peer
# IPv4 local connections:
host all all 127.0.0.1/32 trust
# IPv6 local connections:
host all all ::1/128 ident
# For applications
host all all 0.0.0.0/0 md5
++++++++++

$ pg_ctl stop
$ pg_ctl start

###############################
Test commands:
###############################

>>> barman

$ barman check pgTEST
++++++++++++++++++++++++++
Server pgTEST:
PostgreSQL: OK
is_superuser: OK
wal_level: OK
directories: OK
retention policy settings: OK
backup maximum age: OK (no last_backup_maximum_age provided)
compression settings: OK
failed backups: OK (there are 0 failed backups)
minimum redundancy requirements: FAILED (have 0 backups, expected at least 1)
ssh: OK (PostgreSQL server)
not in recovery: OK
systemid coherence: OK (no system Id stored on disk)
archive_mode: OK
archive_command: OK
continuous archiving: OK
archiver errors: OK
++++++++++++++++++++++++++

$ barman switch-wal pgTEST
++++++++++++++++++++++++++
The WAL file 000000010000000000000007 has been closed on server 'pgTEST'
++++++++++++++++++++++++++

###############################
Take first backup:
###############################

>>> barman

$ barman backup pgTEST
++++++++++++++++++++++++++
Starting backup using rsync-exclusive method for server pgTESTin /barman/pgTEST/base/20200428T155250
Backup start at LSN: 0/9000028 (000000010000000000000009, 00000028)
This is the first backup for server pgTEST
WAL segments preceding the current backup have been found:
000000010000000000000002 from server pgTEST has been removed
000000010000000000000003 from server pgTEST has been removed
000000010000000000000004 from server pgTEST has been removed
000000010000000000000005 from server pgTEST has been removed
000000010000000000000006 from server pgTEST has been removed
Starting backup copy via rsync/SSH for 20200428T155250
Copy done (time: less than one second)
This is the first backup for server pgTEST
Asking PostgreSQL server to finalize the backup.
Backup size: 31.6 MiB. Actual size on disk: 31.6 MiB (-0.00% deduplication ratio).
Backup end at LSN: 0/9000130 (000000010000000000000009, 00000130)
Backup completed (start time: 2020-04-28 15:52:50.689419, elapsed time: 2 seconds)
Processing xlog segments from file archival for pgTEST
000000010000000000000007
000000010000000000000008
000000010000000000000009
000000010000000000000009.00000028.backup
++++++++++++++++++++++++++

Get list of backups:

$ barman list-backup pgTEST
++++++++++++++++++++++++++
pgTEST 20200428T155250 - Tue Apr 28 15:52:51 2020 - Size: 31.6 MiB - WAL Size: 0 B
++++++++++++++++++++++++++

###############################
Setup crontab:
###############################

>>> barman

$ mkdir -p /var/lib/barman/dba
$ {
mkdir -p /var/lib/barman/dba/scripts
mkdir -p /var/lib/barman/dba/logs
mkdir -p /var/lib/barman/dba/backups
mkdir -p /var/lib/barman/dba/patches
}

$ crontab -l
++++++++++++++++++++++++++
##
## PostgeSQL cluster backup
##

05 * * * * /var/lib/barman/dba/scripts/barman_cron.sh > /var/lib/barman/dba/logs/barman_cron.log 2>&1 &
00 22 * * * /var/lib/barman/dba/scripts/barman_bkp.sh pgTEST > /var/lib/barman/dba/logs/barman_bkp.log 2>&1 &
++++++++++++++++++++++++++